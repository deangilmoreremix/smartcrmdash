// analyzePages.js
// Scans src/pages for .tsx/.jsx/.js files, finds files missing the "Page" suffix,
// detects collisions with existing *Page.* twins, and reports which is newer.

const fs = require('fs');
const path = require('path');

const ROOT = process.cwd();
const PAGES_DIR = path.join(ROOT, 'src', 'pages');
const exts = ['.tsx', '.jsx', '.js'];

function listFiles(dir) {
  const out = [];
  for (const entry of fs.readdirSync(dir, { withFileTypes: true })) {
    const p = path.join(dir, entry.name);
    if (entry.isDirectory()) out.push(...listFiles(p));
    else out.push(p);
  }
  return out;
}

function mtime(p) {
  try { return fs.statSync(p).mtimeMs; } catch { return 0; }
}

function fmt(ms) {
  if (!ms) return '';
  const d = new Date(ms);
  return d.toISOString().replace('T', ' ').replace(/\.\d+Z$/, 'Z');
}

if (!fs.existsSync(PAGES_DIR)) {
  console.error(`❌ src/pages not found at: ${PAGES_DIR}`);
  process.exit(1);
}

const all = listFiles(PAGES_DIR).filter(p => exts.includes(path.extname(p)));
const candidates = all.filter(p => !/Page\.(tsx|jsx|js)$/.test(p));

const rows = [];
for (const src of candidates) {
  const ext = path.extname(src);
  const base = src.slice(0, -ext.length);
  const dst = `${base}Page${ext}`;
  const collides = fs.existsSync(dst);
  const srcMt = mtime(src);
  const dstMt = mtime(dst);
  const newer = collides ? (srcMt > dstMt ? 'source' : 'target') : 'source';

  rows.push({
    source: path.relative(PAGES_DIR, src),
    rename_to: path.relative(PAGES_DIR, dst),
    would_collide: collides,
    source_mtime: fmt(srcMt),
    target_mtime: fmt(dstMt),
    which_is_newer: collides ? newer : 'source',
  });
}

// Pretty print
const header = ['source','rename_to','would_collide','source_mtime','target_mtime','which_is_newer'];
console.log(header.join('\t'));
for (const r of rows) {
  console.log(header.map(k => String(r[k])).join('\t'));
}

const collisions = rows.filter(r => r.would_collide);
console.log(`\nSummary:
- Total page files: ${all.length}
- Candidates to rename: ${candidates.length}
- Collisions (*Page.* already exists): ${collisions.length}
`);
